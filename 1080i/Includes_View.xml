<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="View_Cast">
        <top>52</top>
        <preloaditems>2</preloaditems>
    </include>

    <include name="View_Cast_Toplabel">
        <control type="grouplist" id="$PARAM[groupid]">
            <top>52</top>
            <height>52</height>
            <orientation>horizontal</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <itemgap>10</itemgap>
            <visible>Control.IsVisible($PARAM[id])</visible>
            <control type="label">
                <top>20</top>
                <left>15</left>
                <width>auto</width>
                <label>$PARAM[label]</label>
                <aligny>center</aligny>
                <textcolor>main_fg_100</textcolor>
                <font>font_tiny_bold</font>
                <height>24</height>
            </control>
            <control type="label">
                <top>20</top>
                <width>auto</width>
                <label>|</label>
                <aligny>center</aligny>
                <textcolor>$VAR[ColorHighlight]</textcolor>
                <font>font_tiny_bold</font>
                <height>24</height>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Label)</visible>
            </control>
            <control type="label">
                <top>20</top>
                <width>auto</width>
                <label>$INFO[Container($PARAM[id]).ListItem.Label]</label>
                <aligny>center</aligny>
                <textcolor>main_fg_100</textcolor>
                <font>font_tiny</font>
                <height>24</height>
                <visible>Control.HasFocus($PARAM[id])</visible>
            </control>
        </control>
    </include>

    <include name="View_Cast_Label">
        <param name="label2" default="ListItem.Label2" />
        <param name="bordersize" default="15" />
        <definition>
            <control type="group">
                <height>$PARAM[iconheight]</height>
                <control type="image">
                    <height>200</height>
                    <bottom>0</bottom>
                    <bordersize>$PARAM[bordersize]</bordersize>
                    <texture colordiffuse="bf000000" diffuse="$PARAM[diffuse]">common/gradient-actor.png</texture>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_100</textcolor>
                    <bottom>45</bottom>
                    <height>30</height>
                    <aligny>center</aligny>
                    <align>left</align>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!String.IsEmpty($PARAM[label2])</visible>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_70</textcolor>
                    <height>30</height>
                    <bottom>20</bottom>
                    <aligny>center</aligny>
                    <align>left</align>
                    <info>$PARAM[label2]</info>
                    <visible>!String.IsEmpty($PARAM[label2])</visible>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_100</textcolor>
                    <bottom>20</bottom>
                    <height>30</height>
                    <aligny>center</aligny>
                    <align>left</align>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>String.IsEmpty($PARAM[label2])</visible>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Cast_Job_Label">
        <include content="View_Cast_Label">
            <param name="label2" value="ListItem.Property(job)" />
            <param name="iconheight" value="$PARAM[iconheight]" />
        </include>
    </include>
    <include name="View_Cast_Character_Label">
        <include content="View_Cast_Label">
            <param name="label2" value="ListItem.Property(character)" />
            <param name="iconheight" value="$PARAM[iconheight]" />
        </include>
    </include>
    <include name="View_Cast_Video_Label">
        <include content="View_Cast_Label">
            <param name="label2" value="ListItem.Duration" />
            <param name="iconheight" value="$PARAM[iconheight]" />
        </include>
    </include>

    <include name="View_Standard">
        <top>-15</top>
        <left>-15</left>
        <right>-15</right>
        <preloaditems>2</preloaditems>
        <pagecontrol>60</pagecontrol>
    </include>

    <include name="View_Vertical_Movement">
        <onleft>SetFocus(300)</onleft>
        <onright>60</onright>
    </include>
    <include name="View_Horizontal_Movement">
        <onup>SetFocus(300)</onup>
        <ondown>60</ondown>
    </include>

    <include name="View_PVR_Channels">    
        <onleft>SetFocus(300)</onleft>
        <onright>9000</onright>
        <orientation>vertical</orientation>
    </include>

    <include name="View_Vertical">
        <onleft>SetFocus(300)</onleft>
        <onright>60</onright>
        <orientation>vertical</orientation>
    </include>

    <include name="View_Horizontal">    
        <onup>SetFocus(300)</onup>
        <ondown>60</ondown>
        <orientation>horizontal</orientation>
    </include>

    <include name="View_Vertical_Cast">
        <onback>8000</onback>
        <orientation>vertical</orientation>
    </include>
    <include name="View_Vertical_Back">
        <onback condition="!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)">8000</onback>
        <orientation>vertical</orientation>
    </include>
    <include name="View_Horizontal_Back">
        <onback>SetFocus(5050)</onback>
        <onback>8000</onback>
        <orientation>horizontal</orientation>
    </include>

    <include name="View_TopItems_Itemlayout">
        <param name="icon" default="$INFO[ListItem.Icon]" />
        <param name="bordersize" default="0" />
        <definition>
            <control type="group">
                <top>0</top>
                <bottom>$PARAM[textbox_height]</bottom>
                <include content="Object_Geometric">
                    <param name="diffuse" value="$PARAM[diffuse]" />
                </include>
                <control type="image">
                    <centertop>50%</centertop>
                    <centerleft>50%</centerleft>
                    <width>96</width>
                    <height>96</height>
                    <aspectratio>keep</aspectratio>
                    <bordersize>$PARAM[bordersize]</bordersize>
                    <texture background="true" fallback="$PARAM[fallback]">$PARAM[icon]</texture>
                </control>
                <nested />
            </control>
            <control type="textbox">
                <bottom>0</bottom>
                <left>15</left>
                <right>15</right>
                <font>font_tiny</font>
                <textcolor>main_fg_100</textcolor>
                <height>$PARAM[textbox_height]</height>
                <aligny>top</aligny>
                <align>center</align>
                <label>$INFO[ListItem.Label]</label>
            </control>
        </definition>
    </include>

    <include name="View_TopItems_Decades_Itemlayout">
        <param name="label2" default="$INFO[ListItem.Label]" />
        <param name="country" default="false" />
        <param name="studio" default="false" />
        <param name="clearlogo" default="false" />
        <param name="overlaytext" default="true" />
        <definition>
            <control type="group">
                <top>0</top>
                <bottom>$PARAM[textbox_height]</bottom>
                <include content="Object_Geometric">
                    <param name="diffuse" value="$PARAM[diffuse]" />
                </include>
                <control type="image">
                    <bordersize>70</bordersize>
                    <aspectratio>keep</aspectratio>
                    <texture background="true" fallback="DefaultGenres.png">$VAR[Image_GenreIcons]</texture>
                    <visible>String.IsEqual(ListItem.DBType,genre)</visible>
                </control>
                <control type="image">
                    <bordersize>15</bordersize>
                    <aspectratio>keep</aspectratio>
                    <texture background="true" fallback="DefaultCountry.png" colordiffuse="panel_fg_30">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</texture>
                    <visible>String.IsEqual(ListItem.DBType,country)</visible>
                </control>
                <control type="image">
                    <bordersize>30</bordersize>
                    <aspectratio>keep</aspectratio>
                    <texture background="true" fallback="DefaultStudios.png" colordiffuse="panel_fg_100">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
                    <visible>String.IsEqual(ListItem.DBType,studio)</visible>
                </control>
                <control type="textbox">
                    <left>30</left>
                    <right>30</right>
                    <top>20</top>
                    <bottom>20</bottom>
                    <align>center</align>
                    <aligny>center</aligny>
                    <font>font_small_bold</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>String.IsEqual(ListItem.DBType,country) | String.IsEqual(ListItem.DBType,director) | String.IsEqual(ListItem.DBType,year) | String.IsEmpty(ListItem.Icon) | $PARAM[overlaytext]</visible>
                </control>
                <control type="image">
                    <bordersize>45</bordersize>
                    <aspectratio>keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Icon]</texture>
                    <visible>![String.IsEqual(ListItem.DBType,country) | String.IsEqual(ListItem.DBType,director) | String.IsEqual(ListItem.DBType,year)] + !String.IsEmpty(ListItem.Icon) + !$PARAM[overlaytext]</visible>
                </control>

                <nested />
            </control>
            <control type="textbox">
                <bottom>0</bottom>
                <left>15</left>
                <right>15</right>
                <font>font_tiny</font>
                <textcolor>main_fg_100</textcolor>
                <height>$PARAM[textbox_height]</height>
                <aligny>top</aligny>
                <align>center</align>
                <label>$PARAM[label2]</label>
            </control>
        </definition>
    </include>

    <include name="View_TopItems">
        <param name="item_width" default="244.28" />
        <param name="item_height" default="294.28" />
        <param name="height" default="294.28" />
        <param name="textbox_height" default="100" />
        <param name="itemlayout" default="View_TopItems_Itemlayout" />
        <param name="id" default="5600" />
        <param name="diffuse" default="diffuse/640x360.png" /> <!-- FIX THIS -->
        <definition>
            <top>-15</top>
            <left>-15</left>
            <right>-15</right>
            <height>$PARAM[height]</height>
            <preloaditems>2</preloaditems>
            <orientation>horizontal</orientation>
            <itemlayout width="$PARAM[item_width]" height="$PARAM[item_height]">
                <include content="$PARAM[itemlayout]">
                    <param name="textbox_height" value="$PARAM[textbox_height]" />
                    <param name="icon" value="$PARAM[icon]" />
                    <param name="bordersize" value="$PARAM[bordersize]" />
                    <param name="fallback" value="$PARAM[fallback]" />
                    <param name="country" value="$PARAM[country]" />
                    <param name="studio" value="$PARAM[studio]" />
                    <param name="clearlogo" value="$PARAM[clearlogo]" />
                    <param name="label2" value="$PARAM[label2]" />
                    <param name="overlaytext" value="$PARAM[overlaytext]" />
                    <param name="diffuse" value="$PARAM[diffuse]" />
                </include>
            </itemlayout>
            <focusedlayout width="$PARAM[item_width]" height="$PARAM[item_height]">
                <include content="$PARAM[itemlayout]">
                    <param name="textbox_height" value="$PARAM[textbox_height]" />
                    <param name="icon" value="$PARAM[icon]" />
                    <param name="bordersize" value="$PARAM[bordersize]" />
                    <param name="fallback" value="$PARAM[fallback]" />
                    <param name="country" value="$PARAM[country]" />
                    <param name="studio" value="$PARAM[studio]" />
                    <param name="clearlogo" value="$PARAM[clearlogo]" />
                    <param name="label2" value="$PARAM[label2]" />
                    <param name="overlaytext" value="$PARAM[overlaytext]" />
                    <param name="diffuse" value="$PARAM[diffuse]" />
                    <control type="group">
                        <visible>Control.HasFocus($PARAM[id])</visible>
                        <include content="View_Selectbox">
                            <param name="overlay" value="false" />
                        </include>
                    </control>
                </include>
            </focusedlayout>
        </definition>
    </include>

    <include name="View_Group">
        <param name="infohide" default="true" />
        <param name="animation" default="Animation_Common" />
        <param name="bottom" default="view_pad" />
        <definition>
            <include content="View_Pad">
                <param name="bottom" value="$PARAM[bottom]" />
            </include>
            <include>$PARAM[animation]</include>
            <include condition="$PARAM[infohide]">Defs_InfoDialog_Visible</include>
        </definition>
    </include>

    <include name="View_Pad">
        <param name="bottom" default="view_pad" />
        <definition>
            <top>view_top</top>
            <bottom>$PARAM[bottom]</bottom>
            <left>view_pad</left>
            <right>view_pad</right>
        </definition>
    </include>

    <include name="View_WatchedOverlay">
        <include>View_WatchedOverlay_Black</include>
    </include>

    <include name="View_WatchedOverlay_Black">
        <control type="group">
            <visible>!Skin.HasSetting(DisableWatchedOverlay)</visible>
            <control type="image">
                <top>15</top>
                <right>15</right>
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="ff000000" border="10">$VAR[Image_Overlay_Corner]</texture>
            </control>
            <control type="image">
                <top>16</top>
                <right>16</right>
                <width>24</width>
                <height>24</height>
                <texture colordiffuse="ffffffff">$VAR[Image_Overlay]</texture>
                <visible>!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) | ![Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]</visible>
            </control>
            <control type="label">
                <top>15</top>
                <right>15</right>
                <width>28</width>
                <height>28</height>
                <font>font_unwatched</font>
                <align>center</align>
                <textcolor>ffededed</textcolor>
                <label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
                <include>View_UnwatchedEpisodes_Visible</include>
            </control>
        </control>
    </include>

    <include name="View_WatchedOverlay_Focus">
        <control type="group">
            <visible>!Skin.HasSetting(DisableWatchedOverlay)</visible>
            <control type="image">
                <top>15</top>
                <right>15</right>
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="$VAR[ColorHighlight2]" border="10">$VAR[Image_Overlay_Corner]</texture>
            </control>
            <control type="image">
                <top>16</top>
                <right>16</right>
                <width>24</width>
                <height>24</height>
                <texture colordiffuse="panel_bg">$VAR[Image_Overlay_Focus]</texture>
                <visible>!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) | ![Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]</visible>
            </control>
            <control type="label">
                <top>15</top>
                <right>15</right>
                <width>28</width>
                <height>28</height>
                <font>font_unwatched</font>
                <align>center</align>
                <textcolor>panel_bg</textcolor>
                <label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
                <include>View_UnwatchedEpisodes_Visible</include>
            </control>
        </control>
    </include>

    <include name="View_UnwatchedEpisodes_Visible">
        <visible>Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]</visible>
        <visible>!ListItem.IsCollection</visible>
    </include>

    <include name="View_Selectbox">
        <param name="overlay" default="true" />
        <param name="pad" default="-7" />
        <definition>
            <control type="group">
                <left>$PARAM[pad]</left>
                <top>$PARAM[pad]</top>
                <right>$PARAM[pad]</right>
                <bottom>$PARAM[pad]</bottom>
                <control type="image">
                    <bordersize>15</bordersize>
                    <bordertexture border="30" colordiffuse="55ffffff">common/shadow-15.png</bordertexture>
                    <texture border="20" colordiffuse="$VAR[ColorHighlight2]">common/selectbox.png</texture>
                </control>
            </control>
            <include condition="$PARAM[overlay]">View_WatchedOverlay_Focus</include>
        </definition>
    </include>

    <include name="View_Movement_Horizontal">
        <onright condition="Control.IsVisible(60)">60</onright>
        <onright condition="!Control.IsVisible(60)">300</onright>
        <onleft>300</onleft>
    </include>

    <include name="View_Movement_Vertical">
        <ondown condition="Control.IsVisible(60)">60</ondown>
        <ondown condition="!Control.IsVisible(60)">300</ondown>
        <onup>300</onup>
    </include>

    <include name="View_Forced">
        <visible>[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]] | [Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | [Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | [Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | [Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | [Container.Content(episodes) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]] | [Container.Content(actors) + [String.IsEqual(Skin.String(Skin.ForcedView.actors),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.actors))]] | [Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | [Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | [Container.Content(songs) + [String.IsEqual(Skin.String(Skin.ForcedView.songs),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.songs))]] | [Container.Content(addons) + [String.IsEqual(Skin.String(Skin.ForcedView.addons),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.addons))]] | [Container.Content(genres) + [String.IsEqual(Skin.String(Skin.ForcedView.genres),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.genres))]] | [Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | [Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | [Container.Content() + [String.IsEqual(Skin.String(Skin.ForcedView.),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.))]] | [Container.Content(tags) + [String.IsEqual(Skin.String(Skin.ForcedView.tags),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.tags))]] | [Container.Content(years) + [String.IsEqual(Skin.String(Skin.ForcedView.years),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.years))]] | [Container.Content(countries) + [String.IsEqual(Skin.String(Skin.ForcedView.countries),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.countries))]] | [Container.Content(studios) + [String.IsEqual(Skin.String(Skin.ForcedView.studios),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.studios))]] | [Container.Content(playlists) + [String.IsEqual(Skin.String(Skin.ForcedView.playlists),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]] | [Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | [Container.Content(directors) + [String.IsEqual(Skin.String(Skin.ForcedView.directors),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.directors))]] | [Container.Content(files) + [String.IsEqual(Skin.String(Skin.ForcedView.files),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.files))]] | [Container.Content(mixed) + [String.IsEqual(Skin.String(Skin.ForcedView.mixed),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]] | [Container.Content(unknown) + [String.IsEqual(Skin.String(Skin.ForcedView.unknown),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]] | [!Container.Content(games) + !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(actors) + !Container.Content(artists) + !Container.Content(albums) + !Container.Content(songs) + !Container.Content(addons) + !Container.Content(genres) + !Container.Content(images) + !Container.Content(videos) + !Container.Content() + !Container.Content(tags) + !Container.Content(years) + !Container.Content(countries) + !Container.Content(studios) + !Container.Content(playlists) + !Container.Content(musicvideos) + !Container.Content(directors) + !Container.Content(files) + !Container.Content(mixed) + !Container.Content(unknown)] | Window.IsVisible(MyPlaylist.xml)</visible>
    </include>

</includes>

